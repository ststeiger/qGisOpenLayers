<!doctype html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />

    <title>SVG Clock Test</title>

    <meta name="author" content="name" />
    <meta name="description" content="description here" />
    <meta name="keywords" content="keywords,here" />
    <link rel="shortcut icon" href="favicon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" href="stylesheet.css" type="text/css" />


    <!-- 
        http://htmlshell.com/
    -->

    <style type="text/css" media="all">

    </style>

    <script type="text/javascript">

        var SVG = {
            createCanvas: function (width, height, containerId)
            {
                var container = document.getElementById(containerId);
                var canvas = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
                canvas.setAttribute('width', width);
                canvas.setAttribute('height', height);
                container.appendChild(canvas);
                return canvas;
            }
            ,createLine: function (x1, y1, x2, y2, color, w)
            {
                var aLine = document.createElementNS('http://www.w3.org/2000/svg', 'line');
                aLine.setAttribute('x1', x1);
                aLine.setAttribute('y1', y1);
                aLine.setAttribute('x2', x2);
                aLine.setAttribute('y2', y2);
                aLine.setAttribute('stroke', color);
                aLine.setAttribute('stroke-width', w);
                return aLine;
            }
            ,createCircle: function (cx, cy, r, color)
            {
                var svgns = 'http://www.w3.org/2000/svg';
                var shape = document.createElementNS(svgns, "circle");
                shape.setAttributeNS(null, "cx", cx);
                shape.setAttributeNS(null, "cy", cy);
                shape.setAttributeNS(null, "r", r);
                shape.setAttributeNS(null, "fill", color);
                return shape;
            }
            ,createRectangle: function ()
            {
                var rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
                rect.setAttribute('width', '187');
                rect.setAttribute('height', '234');
                rect.setAttribute('fill', '#fff');
                rect.setAttribute('stroke', '#000');
                rect.setAttribute('stroke-width', '2');
                rect.setAttribute('rx', '7');
                return rect;
            }
            ,createText:function (svgDocument, x, y, t, color)
            {
				var svgns = 'http://www.w3.org/2000/svg';
				var textNode = document.createTextNode(t);
				var textElement = document.createElementNS(svgns, "text");
				textElement.appendChild(textNode);
				
				textElement.setAttribute('x', x);
				textElement.setAttribute('y', y);

                // https://developer.mozilla.org/en-US/docs/Web/SVG/Element/text
                // textElement.setAttribute('font-family', "sans-serif");
                // textElement.setAttribute('font-family', "Verdana");
				textElement.setAttribute('font-family', "Times New Roman");
                textElement.setAttribute('font-size', "3px");
                // textElement.setAttribute('stroke-width', 2);
                // textElement.setAttribute('stroke', color);
                textElement.setAttribute('fill', color);
                
                // Not supported in IE11
                // textElement.style = "font-size: 1px;";
                
                var origState = textElement.style.visibility;
                textElement.style.visibility = "hidden";
				

                // svgDocument.documentElement.appendChild(textElement);
				svgDocument.appendChild(textElement);
				var bbox = textElement.getBBox();
                textElement.parentNode.removeChild(textElement);
				textElement.style.visibility = origState;
				
				x -= bbox.width/2.0;
				y += bbox.height/4.0;
				
				textElement.setAttribute('x', x);
                textElement.setAttribute('y', y);
				
				return textElement;
			}
        }


        function drawClock()
        {
            var svgElement = document.getElementById('mySVG');
            var svgDocument = svgElement; //svgElement.getSVGDocument();
            
            var midpointX = 50;
            var midpointY = 50;
            var radius = 30;

            var x2, y2, xBase = midpointX, yBase = midpointY - radius;
            xBase -= midpointX;
            yBase -= midpointY;

            svgDocument.appendChild(SVG.createCircle(midpointX, midpointY, radius, "gray"));
            
            for (var angle = 0; angle < 360; angle -= -30)
            {
                var radian = angle * Math.PI / 180.0;
                var x2 = xBase * Math.cos(radian) - yBase * Math.sin(radian)
                var y2 = xBase * Math.sin(radian) + yBase * Math.cos(radian)
                
                x2 += midpointX;
                y2 += midpointY;

                svgDocument.appendChild(SVG.createLine(midpointX, midpointY, x2, y2, "red", 1));
                svgDocument.appendChild(SVG.createText(svgDocument, x2, y2, angle, "#FF00FF"));
            } // Next angle
            
            
        } // End Function drawHours

    </script>
</head>
<body id="body">
    <input type="button" value="Run" onclick="drawClock()" />

    <svg id="mySVG" xmlns="http://www.w3.org/2000/svg" version="1.1" 
         viewBox="0 0 100 100" preserveAspectRatio="xMidYMid slice"
            style="width:100%; height:100%; position:absolute; top:0; left:0; z-index:-1;">
        <linearGradient id="gradient">
            <stop class="begin" offset="0%" />
            <stop class="end" offset="100%" />
        </linearGradient>
        <rect x="0" y="0" width="100" height="100" style="fill:url(#agradient)" />
        <<!--
        <circle cx="50" cy="50" r="30" style="fill:url(#gradient)" />
        <circle cx="50" cy="50" r="1" style="fill:red" />
        -->

        <!--
        <line degrees="0" x1="50" y1="50" x2="50" y2="20" style="stroke:rgb(255,0,0);stroke-width:1" />
        <line degrees="30" x1="50" y1="50" x2="65" y2="24" style="stroke:rgb(255,0,0);stroke-width:1" />
        <line degrees="60" x1="50" y1="50" x2="76" y2="35" style="stroke:rgb(255,0,0);stroke-width:1" />
        <line degrees="90" x1="50" y1="50" x2="80" y2="50" style="stroke:rgb(255,0,0);stroke-width:1" />
        <line degrees="120" x1="50" y1="50" x2="76" y2="65" style="stroke:rgb(255,0,0);stroke-width:1" />
        <line degrees="150" x1="50" y1="50" x2="65" y2="76" style="stroke:rgb(255,0,0);stroke-width:1" />
        <line degrees="180" x1="50" y1="50" x2="50" y2="80" style="stroke:rgb(255,0,0);stroke-width:1" />

        <line degrees="270" x1="50" y1="50" x2="20" y2="50" style="stroke:rgb(255,0,0);stroke-width:1" />
        -->
    </svg>

    <script type="text/javascript">
        function autorun()
        {
			drawClock();
        }

        if (document.addEventListener) document.addEventListener("DOMContentLoaded", autorun, false);
        else if (document.attachEvent) document.attachEvent("onreadystatechange", autorun);
        else window.onload = autorun;
    </script>
</body>
</html>
