<!doctype html>
<html lang="en">
<head>


    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />
    <title>Test v4</title>

    <script type="text/javascript" src="/Scripts/turnJS/turnjs4/extras/jquery.min.1.7.js"></script>
    <script type="text/javascript" src="/Scripts/turnJS/turnjs4/extras/jquery.mousewheel.min.js"></script>

    <!--
    <script type="text/javascript" src="./Scripts/turnJS/turnjs4/lib/turn.min.js"></script>

    -->
    <script src="Scripts/PdfJS/pdf.js"></script>
    <script src="Scripts/PdfJS/pdf.worker.js"></script>

    

    <script type="text/javascript">
        PDFJS.workerSrc = './Scripts/PdfJS/pdf.worker.js';
    </script>


    <script type="text/javascript" src="/Scripts/turnJS/turnjs4/lib/turn.min.js"></script>
    <script type="text/javascript" src="/Scripts/turnJS/turnjs4/samples/cor/js/cor.js"></script>

    <!--
    <link rel="stylesheet" href="/Scripts/turnJS/turnjs4/samples/cor/css/cor.css" type='text/css' />
    -->


    <script type="text/javascript">

        function CreateStylesheet()
        {
            // Create the <style> tag
            var style = document.createElement("style");

            // Add a media (and/or media query) here if you'd like!
            // style.setAttribute("media", "screen")
            // style.setAttribute("media", "only screen and (max-width : 1024px)")

            // WebKit hack :(
            style.appendChild(document.createTextNode(""));

            // Add the <style> element to the page
            document.head.appendChild(style);

            return style.sheet;
        }


        function getDynamicPageStyle(className, size)
        {
            var style = "\n\t#canvas\n\t{\n\t\twidth: " + (parseInt(size.width, 10) * 2).toString() + "px" + ";\n\t\theight: " + 1070 + "px;\n\t\tmargin: 0px auto;\n\t}\n\t\n\t." + className + "\n\t{\n\t\twidth: " + (parseInt(size.width, 10) * 2).toString() + "px" + ";\n\t\theight: " + parseInt(size.height, 10).toString() + "px" + ";\n\t}\n\t\n\t." + className + "-viewport ." + className + "\n\t{\n\t\twidth: " + (parseInt(size.width, 10) * 2).toString() + "px" + ";\n\t\theight: " + parseInt(size.height, 10).toString() + "px" + ";\n\t\twidth: -" + parseInt(size.width, 10).toString() + "px" + ";\n\t\ttop: -" + parseInt((size.height / 2.0).toString()).toString() + "px" + ";\n\t}\n\t\n\t." + className + "-viewport .page\n\t{\n\t\twidth: " + parseInt(size.width, 10).toString() + "px" + ";\n\t\theight: " + parseInt(size.height, 10).toString() + "px" + ";\n\t\tbackground-color: white;\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-size: 100% 100%;\n\t}\n\t\n\t";
            var rules = style.split('}');
            rules.pop();
            for (var i = 0; i < rules.length; ++i)
            {
                rules[i] = rules[i] + " } ";
            }
            return rules;
        }


        function addStyleDynamically(viewport)
        {
            var sheet = CreateStylesheet();
            // var size = { width: 756, height: 1070};
            var size = {};
            size.width = viewport.width;
            size.height = viewport.height;

            var rules = getDynamicPageStyle("sj-book", size);
            
            for (var i = 0; i < rules.length; ++i)
            {
                sheet.insertRule(rules[i], 0);
            }

        }


        // 0175 ¯
        // 0178 ²
        // 0179 ³
        // 0197 Å
        // 0229 å

    </script>


    <style type="text/css">
        /*
        div
        {
            border: 1px solid hotpink;
        }
        
        */

        .page
        {
            border: 1px solid gray;
        }

        body
        {
            #background-color: gray;
            background-image: linear-gradient(left,#1F2232,#1F2232);
            background-image: -webkit-gradient(linear,0% 0%, 0% 100%, from(#1F2232), to(#1F2232));
            background-image: -moz-linear-gradient(left,#1F2232,#1F2232);
            background-image: -o-linear-gradient(left,#1F2232,#1F2232);
            background-image: -ms-linear-gradient(left,#1F2232,#1F2232);
            filter: progid:DXImageTransform.Microsoft.Gradient(GradientType=1, EndColorStr="#1F2232", StartColorStr="#1F2232");
        }

        body, ul, table, form
        {
            margin: 0;
            padding: 0;
            overflow: hidden;
        }


        .sj-book-viewport
        {
            overflow: hidden;
            width: 100%;
            height: 100%;
        }



        #canvas
        {
            margin-top: 15px !important;
        }


            /*    
            
            
            .sj-book
            {
                width: calc(756px * 2);
                height: 1070px;
            }

            #canvas
            {
                width: calc(756px * 2);
                height: 1070px;
                margin: 0px auto;
            }

            
            .sj-book
            {
                width: calc(756px * 2);
                height: 1070px;
            }


            .sj-book-viewport .sj-book
            {
                width: calc(756px * 2);
                height: 1070px;
                #width: 922px;
                #height: 600px;
                left: -756px;
                top: -535px;
                #left: -461px;
                #top: -300px;
            }

            .sj-book-viewport .page
            {
                #width: 461px;
                #height: 600px;
                width: 756px;
                height: 1070px;
                background-color: white;
                background-repeat: no-repeat;
                background-size: 100% 100%;
            }
            */

        .sj-book-viewport .container
        {
            position: absolute;
            top: 50%;
            left: 50%;
            margin: auto;
        }

        .sj-book .page
        {
            -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
            -moz-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
            -ms-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
            -o-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
        }

        .sj-book-viewport .page img
        {
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            margin: 0;
        }

        .sj-book-viewport .shadow
        {
            -webkit-transition: -webkit-box-shadow 0.5s;
            -moz-transition: -moz-box-shadow 0.5s;
            -o-transition: -webkit-box-shadow 0.5s;
            -ms-transition: -ms-box-shadow 0.5s;
            -webkit-box-shadow: 0 0 20px #ccc;
            -moz-box-shadow: 0 0 20px #ccc;
            -o-box-shadow: 0 0 20px #ccc;
            -ms-box-shadow: 0 0 20px #ccc;
            box-shadow: 0 0 20px #ccc;
        }



        .even 
        {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            font-size:20px;
            background: -webkit-gradient(linear, left top, right top, color-stop(0.95, rgba(0,0,0,0)), color-stop(1, rgba(0,0,0,0.2)));
            background-image: -webkit-linear-gradient(left, rgba(0,0,0,0) 95%, rgba(0,0,0,0.2) 100%);
            background-image: -moz-linear-gradient(left, rgba(0,0,0,0) 95%, rgba(0,0,0,0.2) 100%);
            background-image: -ms-linear-gradient(left, rgba(0,0,0,0) 95%, rgba(0,0,0,0.2) 100%);
            background-image: -o-linear-gradient(left, rgba(0,0,0,0) 95%, rgba(0,0,0,0.2) 100%);
            background-image: linear-gradient(left, rgba(0,0,0,0) 95%, rgba(0,0,0,0.2) 100%);
        }

        .odd
        {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            font-size: 21px;
            background: -webkit-gradient(linear, right top, left top, color-stop(0.95, rgba(0,0,0,0)), color-stop(1, rgba(0,0,0,0.15)));
            background-image: -webkit-linear-gradient(right, rgba(0,0,0,0) 95%, rgba(0,0,0,0.15) 100%);
            background-image: -moz-linear-gradient(right, rgba(0,0,0,0) 95%, rgba(0,0,0,0.15) 100%);
            background-image: -ms-linear-gradient(right, rgba(0,0,0,0) 95%, rgba(0,0,0,0.15) 100%);
            background-image: -o-linear-gradient(right, rgba(0,0,0,0) 95%, rgba(0,0,0,0.15) 100%);
            background-image: linear-gradient(right, rgba(0,0,0,0) 95%, rgba(0,0,0,0.15) 100%);
        }


    </style>


</head>
<body>
    <div id="canvas">
        <div id="book-zoom">
            <div class="sj-book">
                
                <!--
                <div depth="5" class="hard"> <div class="side"></div> </div>
                
                <div depth="5" class="hard front-side"> <div class="depth"></div> </div>
                -->    
                <!--    
                <div class="own-size"></div>
                <div class="own-size even"></div>
                -->
                <!--
                <div class="hard fixed back-side p111"> <div class="depth"></div> </div>
                <div class="hard p112"></div>
                    -->
            </div>
        </div>
    </div>

    <script type="text/javascript">

        var pdf = null;


        // http://stackoverflow.com/questions/13038146/pdf-js-scale-pdf-on-fixed-width
        function getScaleFactor(page)
        {
            var windowWidth = window.clientWidth || window.innerWidth;
            var windowHeight = window.clientHeight || window.innerHeight;

            windowHeight -= 30;

            var vp = page.getViewport(1.0);
            var myscale_x = windowWidth / vp.width
            var myscale_y = windowHeight / vp.height;
            var myscale = Math.min(myscale_x, myscale_y)

            // alert("myscale_x: " + myscale_x + ", " + "myscale_y: " + myscale_y );
            // alert("myscale: " + myscale);

            return myscale;
        }



        function renderPage(num)
        {

            if (num > pdf.numPages)
                return;

            pdf.getPage(num).then(function (page)
            {
                // var scale = 0.8;
                var scale = getScaleFactor(page)
                var viewport = page.getViewport(scale);
                // console.log("viewport:", viewport);
                

                if (pdf.firstPageLoad)
                {
                    addStyleDynamically(viewport);
                    pdf.firstPageLoad = false;
                    loadApp();
                }
                

                // Prepare canvas using PDF page dimensions
                // var canvasID = 'canv' + num;
                // var canvas = document.getElementById(canvasID);
                var addTo = $('.sj-book .p' + num)[0];
                var canvas = document.createElement('canvas');
                addTo.appendChild(canvas);


                if (canvas == null) return;
                var context = canvas.getContext('2d');
                canvas.height = viewport.height;
                canvas.width = viewport.width;


                // Render PDF page into canvas context
                var renderContext = {
                    canvasContext: context,
                    viewport: viewport
                };
                page.render(renderContext);

                // Update page counters
                // document.getElementById('page-number').textContent = pageNum;
                // document.getElementById('number-pages').textContent = pdf.numPages;
            });
        }
        


        function loadApp()
        {
            var flipbook = $('.sj-book');
            // console.log("loading 1 loadApp")


            // Check if the CSS was already loaded
            if (flipbook.width() == 0 || flipbook.height() == 0)
            {
                setTimeout(loadApp, 10);
                return;
            }

            // Mousewheel
            $('#book-zoom').mousewheel(function (event, delta, deltaX, deltaY)
            {
                return;
                var data = $(this).data(),
                    step = 30,
                    flipbook = $('.sj-book');

                if (typeof (data.scrollX) === 'undefined')
                {
                    data.scrollX = actualPos;
                    data.scrollPage = flipbook.turn('page');
                }


                var actualView = Math.round(data.scrollX / step),
                    page = Math.min(flipbook.turn('pages'), Math.max(1, actualView * 2 - 2));

                if ($.inArray(data.scrollPage, flipbook.turn('view', page)) == -1)
                {
                    data.scrollPage = page;
                    flipbook.turn('page', page);
                }

                if (data.scrollTimer)
                    clearInterval(data.scrollTimer);

                data.scrollTimer = setTimeout(function ()
                {
                    data.scrollX = undefined;
                    data.scrollPage = undefined;
                    data.scrollTimer = undefined;
                }, 1000);

            });


            // Arrows
            $(document).keydown(function (e)
            {
                var previous = 37, next = 39;

                switch (e.keyCode)
                {
                    case previous:
                        $('.sj-book').turn('previous');
                        break;
                    case next:
                        $('.sj-book').turn('next');
                        break;
                }

            });


            // Flipbook
            flipbook.bind(($.isTouch) ? 'touchend' : 'click', zoomHandle);

            flipbook.turn({
                elevation: 50,
                acceleration: !isChrome(),
                autoCenter: true,
                gradients: true,
                duration: 1000,
                pages: pdf.numPages,
                when: {
                    turning: function (e, page, view)
                    {
                        return;
                        var book = $(this),
                        currentPage = book.turn('page'),
                        pages = book.turn('pages');

                        updateDepth(book, page);
                        // Hash.go('page/' + page).update();
                    },

                    turned: function (e, page, view)
                    {
                        var book = $(this);

                        if (page == 2 || page == 3)
                        {
                            book.turn('peel', 'br');
                        }

                        updateDepth(book);
                        book.turn('center');
                    },

                    start: function (e, pageObj)
                    {
                        // moveBar(true);
                    },

                    end: function (e, pageObj)
                    {
                        var book = $(this);
                        updateDepth(book);
                        // moveBar(false);
                    },

                    missing: function (e, pages)
                    {
                        for (var i = 0; i < pages.length; i++)
                        {
                            addPage(pages[i], $(this));
                        }
                    }
                }
            });

            flipbook.addClass('animated');

            // Show canvas
            $('#canvas').css({ visibility: '' });


            /*
            $("#book-zoom").bind("zoom.tap", function (event)
            {
                if ($(this).zoom("value") == 1)
                {
                    $(this).zoom("zoomIn", event);
                } else
                {
                    $(this).zoom("zoomOut");
                }
            });
            */

        }

        // Hide canvas
        $('#canvas').css({ visibility: 'hidden' });



        function myReady()
        {
            PDFJS.disableWorker = true;
            var fileName = "./Module/OK_BD_Modul_Berichte.pdf";
            fileName = "./Module/BD_Modul_Objektmanagement.pdf";

            PDFJS.getDocument(fileName).then(function (pdfDoc)
            {
                numberOfPages = pdfDoc.numPages;
                pdf = pdfDoc;
                pdf.firstPageLoad = true;

                // Load turn.js
                renderPage(1); 
            });
        }

        myReady();
        
    </script>
</body>
</html>